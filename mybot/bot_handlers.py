from bot import bot #–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
from messages import * #–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å—ë —Å —Ñ–∞–π–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
import config
from telebot import types
from datetime import datetime

# Dictionary to store user data
user_data = {}
@bot.message_handler(commands=['start'])
def start_handler(message):
    # If user data does not exist, display a default message
    start_message = f"""üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *DF NITU MISIS Bot!*

üõ†‚ù§Ô∏è*–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫* ‚Äî _@{config.DEVELOPER_USERNAME}_
"""
    # Create authorization keyboard
    autorize = types.ReplyKeyboardMarkup(resize_keyboard=True)
    confirm_btn = types.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    reference_btn = types.KeyboardButton(text="–°–ø—Ä–∞–≤–∫–∞")
    profile_btn = types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")
    autorize.add(confirm_btn)
    autorize.add(reference_btn, profile_btn)

    # Send message with keyboard
    bot.send_message(message.chat.id, text=start_message, reply_markup=autorize, parse_mode="Markdown")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: message.text in ["–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "–°–ø—Ä–∞–≤–∫–∞", "–ü—Ä–æ—Ñ–∏–ª—å", "–ù–∞–∑–∞–¥","–û—Ç–º–µ–Ω–∞"])
def menu_handler(message):
    if message.text == "–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ (—Å—Ç—É–¥–µ–Ω—Ç/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)
        status_key = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        student_btn = types.KeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç")
        teacher_btn = types.KeyboardButton(text="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")
        back_btn = types.KeyboardButton(text="–ù–∞–∑–∞–¥")
        status_key.add(student_btn, teacher_btn, back_btn)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å", reply_markup=status_key)

    elif message.text == "–°–ø—Ä–∞–≤–∫–∞":
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_message(message.chat.id, HELP_MESSAGE)
    
    elif message.text == "–ü—Ä–æ—Ñ–∏–ª—å":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_message(message.chat.id, f"‚öôÔ∏è –í–∞—à *Telegram ID* ‚Äî {message.chat.id}", parse_mode="Markdown")
    elif message.text == "–ù–∞–∑–∞–¥":
        start_handler(message)
    
    elif message.text == "–û—Ç–º–µ–Ω–∞":
        status_key = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        student_btn = types.KeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç")
        teacher_btn = types.KeyboardButton(text="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")
        back_btn = types.KeyboardButton(text="–ù–∞–∑–∞–¥")
        status_key.add(student_btn, teacher_btn, back_btn)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å", reply_markup=status_key)

    else:

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫
        bot.send_message(message.chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫. *–ù–ï –°–¢–û–ò–¢* –ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –ª–∏—à–Ω–µ–µ!",
                         parse_mode="Markdown")


@bot.message_handler(func=lambda message: message.text in ["–°—Ç—É–¥–µ–Ω—Ç", "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"])
def user_type_handler(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data[message.chat.id] = {"status": message.text}

    if message.text == "–°—Ç—É–¥–µ–Ω—Ç":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        direction_key = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        it_btn = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
        economy_btn = types.KeyboardButton("–≠–∫–æ–Ω–æ–º–∏–∫–∞")
        metallygry_btn = types.KeyboardButton("–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è")
        cancel_btn = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
        direction_key.add(it_btn, economy_btn, metallygry_btn, cancel_btn)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", reply_markup=direction_key)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        bot.register_next_step_handler(message, get_students_direction)

    elif message.text == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å":
        key = types.ReplyKeyboardMarkup(resize_keyboard=True)
        cancel_btn = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
        key.add(cancel_btn)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é", reply_markup=key)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        bot.register_next_step_handler(message, get_teachers_schedule)
    
def get_teachers_schedule(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        bot.send_message(message.chat.id, "–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω—ë–Ω.")
        menu_handler(message)
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–∞—è —Ñ–∞–º–∏–ª–∏—è –≤ —Å–ø–∏—Å–∫–µ
        surname = message.text.strip().title()
        surnames = ["–¢–∞–±–∞—Ä–æ–≤", "–°–∞—Ñ–∞—Ä–æ–≤"]
        if surname in surnames:
            autorize = types.ReplyKeyboardMarkup(resize_keyboard=True)
            confirm_btn = types.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            reference_btn = types.KeyboardButton(text="–°–ø—Ä–∞–≤–∫–∞")
            profile_btn = types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")
            autorize.add(confirm_btn)
            autorize.add(reference_btn, profile_btn)
            bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {surname}\n–í–æ—Ç –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:",reply_markup=autorize)
        else:
            # –ï—Å–ª–∏ —Ñ–∞–º–∏–ª–∏–∏ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            autorize = types.ReplyKeyboardMarkup(resize_keyboard=True)
            confirm_btn = types.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            reference_btn = types.KeyboardButton(text="–°–ø—Ä–∞–≤–∫–∞")
            profile_btn = types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")
            autorize.add(confirm_btn)
            autorize.add(reference_btn, profile_btn)
            bot.send_message(message.chat.id, "–í–∞—à–µ–π —Ñ–∞–º–∏–ª–∏–∏ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ...", reply_markup=autorize)

def get_students_direction(message):
    if message.text == "–û—Ç–º–µ–Ω–∞":
        bot.send_message(message.chat.id, "–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω—ë–Ω.")
        menu_handler(message)
    else:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data[message.chat.id]["direction"] = message.text

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
        course_key = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        first_crs = types.KeyboardButton("1 –∫—É—Ä—Å")
        second_crs = types.KeyboardButton("2 –∫—É—Ä—Å")
        third_crs = types.KeyboardButton("3 –∫—É—Ä—Å")
        fourth_crs = types.KeyboardButton("4 –∫—É—Ä—Å")
        course_key.add(first_crs, second_crs, third_crs, fourth_crs)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∫—É—Ä—Å", reply_markup=course_key)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        bot.register_next_step_handler(message, get_students_course)


def get_students_course(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data[message.chat.id]["course"] = message.text

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
    group_key = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –∫—É—Ä—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_data[message.chat.id]["direction"] == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" and message.text in ["1 –∫—É—Ä—Å", "2 –∫—É—Ä—Å", "3 –∫—É—Ä—Å"]:
        group_a_btn = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ –ê")
        group_b_btn = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ –ë")
        group_key.add(group_a_btn, group_b_btn)
    elif user_data[message.chat.id]["direction"] == "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è" and message.text in ["1 –∫—É—Ä—Å", "2 –∫—É—Ä—Å"]:
        group_a_btn = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ –ê")
        group_b_btn = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ –ë")
        group_key.add(group_a_btn, group_b_btn)
    else:
        group_a_btn = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ –ê")
        group_key.add(group_a_btn)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É", reply_markup=group_key)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(message, save_user_data)


def save_user_data(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data[message.chat.id]["group"] = message.text
    week = ""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    current_date = datetime.now()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ç–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏
    week_parity = current_date.isocalendar()[1] % 2
    
    if week_parity == 0:
        week = "–ß–∏—Å–ª–∏—Ç–µ–ª—å"
    else:  # –ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è
        week = "–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å"
    
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    selected_data = user_data[message.chat.id]
    start_message = f"""üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!

–í—ã –≤—ã–±—Ä–∞–ª–∏:
–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {selected_data['direction']}
–ö—É—Ä—Å: {selected_data['course']}
–ì—Ä—É–ø–ø–∞: {selected_data['group']}

–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: {week}


üõ†‚ù§Ô∏è*–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫* ‚Äî _@{config.DEVELOPER_USERNAME}_"""

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    autorize = types.ReplyKeyboardMarkup(resize_keyboard=True)
    confirm_btn = types.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    reference_btn = types.KeyboardButton(text="–°–ø—Ä–∞–≤–∫–∞")
    profile_btn = types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")
    autorize.add(confirm_btn)
    autorize.add(reference_btn, profile_btn)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, text=start_message, reply_markup=autorize, parse_mode="Markdown")
    if user_data[message.chat.id]["direction"] == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" and user_data[message.chat.id]['course'] == "2 –∫—É—Ä—Å" and user_data[message.chat.id]["group"] == "–ì—Ä—É–ø–ø–∞ –ë":
        bot.send_message(message.chat.id, format_schedule(get_today_schedule()))
def get_today_schedule():
    current_day = datetime.now().strftime("%A")  # current_day –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ datetime
    week_number = datetime.now().isocalendar()[1]
    if week_number % 2 == 0 and current_day in schedule2: # –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ (–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –Ω–µ–¥–µ–ª–∏ –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞) –≤–µ—Ä–Ω–æ –∏ –≤ —Å–ø–∏—Å–∫–µ –µ—Å—Ç—å –¥–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º,
        return schedule2[current_day]                     # —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—ë—Ç –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ Schedule 2
    elif current_day in schedule1:                        # –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –¥–µ–ª–µ–Ω–∏—è –Ω–µ –≤–µ—Ä–Ω–æ, —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—ë—Ç –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ Schedule 1
        return schedule1[current_day]
    else:                                                 # –ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏, —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—ë—Ç –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
def format_schedule(schedule):
    if not schedule:                                                     # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è get_today_schedule –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç,
        return "–°–µ–≥–æ–¥–Ω—è –ø–∞—Ä –Ω–µ—Ç!"                                        # —Ñ—É–Ω–∫–∏—Ü—è format_schedule –≤–µ—Ä–Ω—ë—Ç –æ—Ç–≤–µ—Ç "–°–µ–≥–æ–¥–Ω—è –ø–∞—Ä –Ω–µ—Ç!"
    else:                                                                # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è get_today_schedule –≤–µ—Ä–Ω—É–ª–∞ –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–æ–≤, format_schedule –≤–µ—Ä–Ω—ë—Ç –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result
        result = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"                              # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è result –∏–º–µ–µ—Ç –≤–∏–¥ string (–ø–æ —Ä—É—Å—Å–∫–∏ = —Å—Ç—Ä–æ–∫–∞), –°–∏–º–≤–æ–ª –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ Python ‚Äî —ç—Ç–æ \n . –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞
        for lesson in schedule:                                          # for in - —ç—Ç–æ —Ü–∏–∫–ª. –û–±—â–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å for... in –≤ python –≤—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: for <–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è> in <–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å>:< –¥–µ–π—Å—Ç–≤–∏–µ> else:< –¥–µ–π—Å—Ç–≤–∏–µ>. 
            result += f"{lesson['–í—Ä–µ–º—è']} - {lesson['–ü—Ä–µ–¥–º–µ—Ç']}\n"       # –≠–ª–µ–º–µ–Ω—Ç—ã ¬´–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏¬ª –ø–µ—Ä–µ–±–∏—Ä–∞—é—Ç—Å—è –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º ¬´–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π¬ª —Ü–∏–∫–ª–∞; –µ—Å–ª–∏ –±—ã—Ç—å —Ç–æ—á–Ω—ã–º, –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã.
        return result                                                    # "+-" - —ç—Ç–æ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ –≤ —Ü–∏–∫–ª–µ. –¢–µ–º–∞ –Ω–µ —Å–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è, –æ–± —ç—Ç–æ–º –ø–æ–∑–∂–µ. f-—Å—Ç—Ä–æ–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω—É–∂–Ω–æ–º –Ω–∞–º –≤–∏–¥–µ

    
    
    
# –°–ø–∏—Å–æ–∫ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∏–π (–≤ –º–æ—ë–º —Å–ª—É—á–∞–µ —Å–ø–∏—Å–∫–∞ 2, —Ç.–∫. —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ–¥–µ–ª—è-—á–∏—Å–ª–∏—Ç–µ–ª—å –∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å) –ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å = Schedule 2, –ß–∏—Å–ª–∏—Ç–µ–ª—å  Schedule 1
schedule1 = {
    'Monday': [
        {'–í—Ä–µ–º—è': '08:00-09:20', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-309, –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º —ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è(–ª–µ–∫)'}, # "–ø–µ—Ä–æ–µ –∑–Ω–∞—á.":"–≤—Ç–æ—Ä–æ–µ –∑–Ω–∞—á." - –º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –≤—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–¥ —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏. 
        {'–í—Ä–µ–º—è': '09:30-10:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-301, –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å(–ø—Ä)'},
        {'–í—Ä–µ–º—è': '11:00-12:20', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-510, –¢–µ–ª–µ–º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ —ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è(–¥–æ–ø)'}
    ],
    'Tuesday': [
        {'–í—Ä–µ–º—è': '11:50', '–ü—Ä–µ–¥–º–µ—Ç': '–ê-413, –ê–Ω–∞–ª–∏–∑ –∏ –æ—Ü–µ–Ω–∫–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π) —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (–¥–æ–ø.–∑–∞–Ω.)'},
        {'–í—Ä–µ–º—è': '13:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-506, –≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∂–µ–ª–µ–∑–Ω—ã—Ö –¥–æ—Ä–æ–≥ (–ø—Ä)'},
        {'–í—Ä–µ–º—è': '15:40', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-305, –≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ (–ø—Ä)'},
        {'–í—Ä–µ–º—è': '17:30', '–ü—Ä–µ–¥–º–µ—Ç': '–ê-222, –£—á–µ—Ç –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π) —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (–¥–æ–ø.–∑–∞–Ω.)'}
    ],
    'Wednesday': [
        {'–í—Ä–µ–º—è': '09:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-409, –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π) —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (–¥–æ–ø.–∑–∞–Ω.)'},
        {'–í—Ä–µ–º—è': '11:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-506, –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–µ—Ç–∏ –∏ —Å–∏—Å—Ç–µ–º—ã (–ª–µ–∫)'},
        {'–í—Ä–µ–º—è': '13:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-502, –≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∂–µ–ª–µ–∑–Ω—ã—Ö –¥–æ—Ä–æ–≥ (–ª–µ–∫)'},
        {'–í—Ä–µ–º—è': '15:40', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-512, –≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –Ω–µ—Ç—è–≥–æ–≤—ã—Ö –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π (–ª/—Ä)'}
    ],
    'Thursday': [
        {'–í—Ä–µ–º—è': '09:50', '–ü—Ä–µ–¥–º–µ—Ç': '–ê-306, –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ (–¥–æ–ø.–∑–∞–Ω.)'},
        {'–í—Ä–µ–º—è': '11:50', '–ü—Ä–µ–¥–º–µ—Ç': '–¢-44, –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è (–ª–µ–∫)'},
        {'–í—Ä–µ–º—è': '13:50', '–ü—Ä–µ–¥–º–µ—Ç': '–ê-221, –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è (–ø—Ä)'}
    ],
    'Friday': [
        {'–í—Ä–µ–º—è': '11:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ –õ-512, –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º —ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è (–ª/—Ä)'},
        {'–í—Ä–µ–º—è': '13:50', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-510, –≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ–µ–∑–¥–æ–≤ (–ª–µ–∫)'},
        {'–í—Ä–µ–º—è': '15:40', '–ü—Ä–µ–¥–º–µ—Ç': '–õ-502, –≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ–µ–∑–¥–æ–≤ (–ø—Ä)'}
    ]
}

 # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª—è—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å. –ì–ª–∞–≤–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Å–ø–∏—Å–∫–∞, –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–∏–º–≤–æ–ª—ã. –ù–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.

schedule2 = {
    'Monday': [
        {'–í—Ä–µ–º—è': '10:00', '–ü—Ä–µ–¥–º–µ—Ç': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'},
        {'–í—Ä–µ–º—è': '12:00', '–ü—Ä–µ–¥–º–µ—Ç': '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'}
    ],
    'Tuesday': [
        {'–í—Ä–µ–º—è': '14:57', '–ü—Ä–µ–¥–º–µ—Ç': '–§–∏–∑–∏–∫–∞'},
        {'–í—Ä–µ–º—è': '14:59', '–ü—Ä–µ–¥–º–µ—Ç': '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫'}
    ],
    'Wednesday': [
        {'–í—Ä–µ–º—è': '09:00', '–ü—Ä–µ–¥–º–µ—Ç': '–§–∏–∑—Ä–∞'},
        {'–í—Ä–µ–º—è': '13:00', '–ü—Ä–µ–¥–º–µ—Ç': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'}
    ],
    'Thursday': [
        {'–í—Ä–µ–º—è': '10:00', '–ü—Ä–µ–¥–º–µ—Ç': '–•–∏–º–∏—è'},
        {'–í—Ä–µ–º—è': '12:00', '–ü—Ä–µ–¥–º–µ—Ç': '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è'}
    ],
    'Friday': [
        {'–í—Ä–µ–º—è': '11:00', '–ü—Ä–µ–¥–º–µ—Ç': '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ'},
        {'–í—Ä–µ–º—è': '14:00', '–ü—Ä–µ–¥–º–µ—Ç': '–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞'}
    ]
}
bot.infinity_polling(none_stop=True)
